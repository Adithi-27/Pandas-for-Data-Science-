# -*- coding: utf-8 -*-
"""Module 1.5 - Data Manipulation with Pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qIW0kCVjlw4_4lZKG3Kf92r4ZGxzmVt0

1. Working with NaN
2. Handling NaN Values
"""

import numpy as np
import pandas as pd

data = np.random.rand(10, 3)
for col in range(data.shape[1]):
    null_indices = np.random.choice(10, 3, replace=False)
    data[null_indices, col] = np.nan
df = pd.DataFrame(data, columns=['Column_1', 'Column_2', 'Column_3'])

df.head(6)

#checking with pd.isna()
pd.isna(df['Column_1'])

pd.isna(df)

#checking with pd.notna()
pd.notna(df['Column_1'])

pd.notna(df)

#checking with isnull().sum()
df.isnull()

df.isnull().sum()

#checking with notnull().sum()
df.notnull().sum()

df.info()

df

"""Handling NaN Values"""

df

df.isnull().sum()

df1 = df.copy()

df1.fillna(0, inplace=True)

df1.isnull().sum()

df1.head()

df

df.fillna(
{
    'Column_1': 0,
    'Column_2' : 1,
    'Column_3': 2
})

df

df.dropna(how='any')

df.dropna(how='all')

df.dropna(thresh=2)

df.dropna(thresh=3)

df.dropna(thresh=4)

df.fillna(
{
    'Column_1': 'aiquest.org',
    'Column_2' : 'study mart',
    'Column_3': 'data science'
})

"""Filling NaN (missing) values with central tendency"""

df.fillna(df.mean())

df

df.mean()

df.fillna(df.median()) # for outlier

df

df.Column_1.mode().iloc[0]